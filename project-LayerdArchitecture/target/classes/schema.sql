DROP DATABASE  IF EXISTS Fancy_WoodCraft_Management;

CREATE DATABASE  IF NOT EXISTS Fancy_WoodCraft_Management;

USE Fancy_WoodCraft_Management;


CREATE TABLE UserManager(
    U_ID VARCHAR(35) PRIMARY KEY,
    U_Name  VARCHAR(20) NOT NULL,
    tel VARCHAR(10) NOT NULL,
    jobTitle VARCHAR(20) NOT NULL,
    password VARCHAR(20) NOT NULL
);
DESC UserManager;

INSERT INTO UserManager VALUES ("U001","John","0715417826","Manager","1234");


CREATE TABLE Customer(
    C_ID VARCHAR(35) PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    address VARCHAR(40) NOT NULL,
    LoyaltyStatus VARCHAR(50) NOT NULL,
    tel VARCHAR(10) NOT NULL
);
DESC Customer;


CREATE TABLE Orders(
    Order_ID  VARCHAR(35) PRIMARY KEY,
    C_ID VARCHAR(35) NOT NULL,
    date DATE NOT NULL,
    CONSTRAINT FOREIGN KEY(C_ID) REFERENCES Customer(C_ID) ON UPDATE CASCADE ON DELETE CASCADE
);
DESC Orders;


 CREATE TABLE Product(
    Product_ID VARCHAR(40) PRIMARY KEY,
    name VARCHAR(35) NOT NULL,
    Description VARCHAR(100) ,
    Price DOUBLE(10,2),
    Quantity_On_Stock INT
 );

DESC Product;


CREATE TABLE Order_Detail(

    Order_ID VARCHAR(35) NOT NULL,
    Product_ID VARCHAR(40) NOT NULL,
    qty INT NOT NULL,
    unit_price DOUBLE NOT NULL,
    CONSTRAINT FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (Product_ID) REFERENCES Product(Product_ID) ON UPDATE CASCADE ON DELETE CASCADE

);
DESC Order_Detail;


CREATE TABLE Employee(
  E_ID VARCHAR(35)  PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  tel VARCHAR(10) NOT NULL,
  jobTitle VARCHAR(45) NOT NULL
);
DESC Employee;


CREATE TABLE Product_Detail(
    E_ID VARCHAR(35) NOT NULL,
    Product_ID VARCHAR(40) NOT NULL,
    Description VARCHAR(60) ,
    CONSTRAINT FOREIGN KEY(Product_ID) REFERENCES Product(Product_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (E_ID) REFERENCES Employee(E_ID) ON UPDATE CASCADE ON DELETE CASCADE

);
DESC Product_Detail;


CREATE TABLE Salary(
  Salary_ID VARCHAR(10) PRIMARY KEY,
  E_ID VARCHAR(35) NOT NULL,
  tel VARCHAR(10) NOT NULL,
  Payment DOUBLE (10,2),
  date DATE NOT NULL,
  CONSTRAINT FOREIGN KEY (E_ID) REFERENCES Employee (E_ID) ON UPDATE CASCADE ON DELETE CASCADE

);
DESC Salary;


CREATE TABLE Delivery(
    Delivery_ID VARCHAR(45) PRIMARY KEY,
    Order_ID VARCHAR(35) NOT NULL,
    deliveryStatus VARCHAR(50) ,
    location VARCHAR(90) NOT NULL,
    E_ID VARCHAR(35) NOT NULL,
    tel VARCHAR(10) NOT NULL,
    CONSTRAINT FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (E_ID) REFERENCES Employee(E_ID) ON UPDATE CASCADE ON DELETE CASCADE

);
DESC Delivery;


CREATE TABLE Supplier(
    Supplier_ID VARCHAR(35) PRIMARY KEY,
    name VARCHAR(35) NOT NULL,
    address VARCHAR(50) NOT NULL,
    tel VARCHAR(10) NOT NULL

);
DESC Supplier;


CREATE TABLE RawMaterial(
    RawMaterial_ID VARCHAR(35) PRIMARY KEY,
    MaterialName VARCHAR(100) NOT NULL,
    Qty INT,
    Supplier_ID VARCHAR(35) NOT NULL,
    CONSTRAINT  FOREIGN KEY (Supplier_ID) REFERENCES Supplier(Supplier_ID) ON UPDATE CASCADE ON DELETE CASCADE
);
DESC RawMaterial;


CREATE TABLE Supplier_Detail(
    RawMaterial_ID VARCHAR(35) NOT NULL,
    Supplier_ID VARCHAR(35) NOT NULL,
    Date DATE,
    Quantity_On_Stock INT ,
    Price DOUBLE(10,2),
   CONSTRAINT FOREIGN KEY (RawMaterial_ID) REFERENCES RawMaterial(RawMaterial_ID) ON UPDATE CASCADE ON DELETE CASCADE ,
   CONSTRAINT FOREIGN KEY (Supplier_ID) REFERENCES Supplier(Supplier_ID) ON UPDATE CASCADE ON DELETE CASCADE

);
DESC Supplier_Detail;


CREATE TABLE Bill_OF_Materials(
    Product_ID VARCHAR(40) NOT NULL,
    RawMaterial_ID VARCHAR(35) NOT NULL,
    Unit_Of_Measure VARCHAR(90) NOT NULL,
    qty VARCHAR(100) NOT NULL,
    cost DOUBLE(10,2),
     date DATE,
     CONSTRAINT FOREIGN KEY (RawMaterial_ID) REFERENCES RawMaterial(RawMaterial_ID) ON UPDATE CASCADE ON DELETE CASCADE ,
     CONSTRAINT FOREIGN KEY(Product_ID) REFERENCES Product(Product_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
DESC Bill_OF_Materials;


